# Default values for elasticsearch
replicaCount: 1

image:
  repository: docker.elastic.co/elasticsearch/elasticsearch
  tag: "8.5.1"
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# Elasticsearch configuration
elasticsearch:
  clusterName: "elasticsearch-cluster"
  nodeName: "elasticsearch-node"
  
  # Environment variables
  env:
    - name: "discovery.type"
      value: "single-node"
    - name: "ES_JAVA_OPTS"
      value: "-Xms1g -Xmx1g"
    - name: "xpack.security.enabled"
      value: "false"
    - name: "xpack.security.enrollment.enabled"
      value: "false"
    - name: "xpack.security.http.ssl.enabled"
      value: "false"
    - name: "xpack.security.transport.ssl.enabled"
      value: "false"

# Service configuration
service:
  type: ClusterIP
  port: 9200
  targetPort: 9200
  annotations: {}

# Persistence configuration
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations: {}

# Resource limits
resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Security context
securityContext:
  fsGroup: 1000
  runAsUser: 1000

# Pod security context
podSecurityContext:
  fsGroup: 1000

# Liveness probe
livenessProbe:
  httpGet:
    path: /_cluster/health
    port: 9200
  initialDelaySeconds: 90
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Readiness probe
readinessProbe:
  httpGet:
    path: /_cluster/health
    port: 9200
  initialDelaySeconds: 90
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Network policy
networkPolicy:
  enabled: false
  ingress: []
  egress: []
