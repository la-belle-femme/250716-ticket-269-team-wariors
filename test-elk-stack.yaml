---
# Source: elk-stack/charts/kibana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: elk-stack-kibana-config
  namespace: elk-demo
  labels:
    helm.sh/chart: kibana-1.0.0
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: elk-stack
    app.kubernetes.io/version: "8.5.1"
    app.kubernetes.io/managed-by: Helm
data:
  kibana.yml: |-
    
    server:
      host: "0.0.0.0"
      port: 5601
      publicBaseUrl: "http://localhost:5601"
    
    elasticsearch:
      hosts: ["http://elasticsearch:9200"]
      requestTimeout: 30000
      pingTimeout: 3000
    
    logging:
      appenders:
        default:
          type: console
          layout:
            type: json
      root:
        level: info
        appenders:
          - default
    
    xpack:
      security:
        enabled: false
      monitoring:
        enabled: false
---
# Source: elk-stack/charts/elasticsearch/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elk-stack-elasticsearch-data
  namespace: elk-demo
  labels:
    helm.sh/chart: elasticsearch-1.0.0
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elk-stack
    app.kubernetes.io/version: "8.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: elk-stack/charts/elasticsearch/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: elk-stack-elasticsearch
  namespace: elk-demo
  labels:
    helm.sh/chart: elasticsearch-1.0.0
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elk-stack
    app.kubernetes.io/version: "8.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9200
      targetPort: 9200
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elk-stack
---
# Source: elk-stack/charts/kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: elk-stack-kibana
  namespace: elk-demo
  labels:
    helm.sh/chart: kibana-1.0.0
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: elk-stack
    app.kubernetes.io/version: "8.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 5601
      targetPort: 5601
      nodePort: 30561
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: elk-stack
---
# Source: elk-stack/charts/elasticsearch/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elk-stack-elasticsearch
  namespace: elk-demo
  labels:
    helm.sh/chart: elasticsearch-1.0.0
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: elk-stack
    app.kubernetes.io/version: "8.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/instance: elk-stack
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/instance: elk-stack
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: elasticsearch
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
          image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          env:
            - name: discovery.type
              value: single-node
            - name: ES_JAVA_OPTS
              value: -Xms1g -Xmx1g
            - name: xpack.security.enabled
              value: "false"
            - name: xpack.security.enrollment.enabled
              value: "false"
            - name: xpack.security.http.ssl.enabled
              value: "false"
            - name: xpack.security.transport.ssl.enabled
              value: "false"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /_cluster/health
              port: 9200
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /_cluster/health
              port: 9200
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: elk-stack-elasticsearch-data
---
# Source: elk-stack/charts/kibana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elk-stack-kibana
  namespace: elk-demo
  labels:
    helm.sh/chart: kibana-1.0.0
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: elk-stack
    app.kubernetes.io/version: "8.5.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kibana
      app.kubernetes.io/instance: elk-stack
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kibana
        app.kubernetes.io/instance: elk-stack
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: kibana
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
          image: "docker.elastic.co/kibana/kibana:8.5.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5601
              protocol: TCP
          env:
            - name: ELASTICSEARCH_HOSTS
              value: http://elasticsearch:9200
            - name: SERVER_HOST
              value: 0.0.0.0
            - name: XPACK_SECURITY_ENABLED
              value: "false"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /app/kibana
              port: 5601
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /app/kibana
              port: 5601
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: config
              mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
      volumes:
        - name: config
          configMap:
            name: elk-stack-kibana-config
